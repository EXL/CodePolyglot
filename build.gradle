plugins {
	id 'java'
	id 'org.springframework.boot' version '2.4.0'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
}

group = 'ru.exlmoto'
version = '1.0.0'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

springBoot {
	buildInfo {
		properties {
			additional = [
					'revision': getShortGitRevision()
			]
		}
	}
}

dependencies {
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'

	runtimeOnly 'org.postgresql:postgresql'

	implementation 'org.graalvm.sdk:graal-sdk:20.3.0'
	implementation 'org.owasp.encoder:encoder:1.2.3'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

test {
	maxHeapSize = '3072m'
	useJUnitPlatform()
}

def getShortGitRevision() {
	def commit = 'git rev-parse --short HEAD'
	def count = 'git rev-list --count HEAD'
	try {
		return [commit.execute().text.trim(), count.execute().text.trim()].join('_')
	} catch (IOException ignored) {
		logger.warn('Cannot get information from Git commands. Is Git installed?')
		return 'unknown'
	}
}
